return(pops)
}
####
#### 3. Run model simulations across range of competition -------------------
####    and species correlations in env response
####
# Set up global variables
rm1 = 0.8 #species 1 intrinsic growth rate
rm2 = 0.8 #species 2 intrinsic growth rate
K1 = 1500 #species 1 carrying capacity
K2 = 1500 #species 2 carrying capacity
evar1 = 0.05 #species 1 environmental variance
evar2 = 0.05 #species 2 environmental variance
N1.start <- K1
N2.start <- K2
# beta12 = 1 #competition coefficient; effect of spp2 on spp1
# beta21 = 1 #competition coefficient; effect of spp1 on spp2
beta12 =  0.5
beta21 = 0.65
rho = 0
run_time = 1500
burn = run_time/2
whitevar <- get_env(sigE = 6, rho = rho, nTime = run_time)
model_null <- model(rm1, rm2,
N1.start, N2.start,
K1, K2,
evar1, evar2,
beta12, beta21,
run_time, whitevar,
harv=rep(0,run_time))
dfout <- as.data.frame(model_null[,1:3])
colnames(dfout) <- c("Spp1","Spp2","Total")
dfout <- dfout %>%
mutate(Time = c(1:nrow(dfout))) %>%
filter(Time > 1300) %>%
gather(Species, Abundance, 1:3) %>%
mutate(Biomass = Abundance/100,
Year = rep(c(1:200),3))
ggplot(dfout, aes(x=Year, y=Biomass, color=Species))+
#geom_line()+
geom_xspline(spline_shape = 1)+
scale_color_manual(values = c("goldenrod2","darkslateblue","black"))+
theme_few()+
guides(color=FALSE)
################################################################################
#### Lotka-Volterra model to test the relationship between
#### synchrony in population dynamics and species responses to
#### the environment in the presence/absence of competition.
####
#### The idea is to see if the correlation between the synchrony measures
#### can tell us something about how much competition structures
#### the community if we know species response to environment.
####
#### Andrew Tredennick: atredenn@gmail.com
####
#### Model adapted from Loreau and de Mazancourt 2013, Ecology Letters
################################################################################
# Clear the workspace
rm(list=ls())
# Load some libraries
library(tidyverse)
library(dplyr)
library(ggthemes)
library(ggalt)
library(mvtnorm)
library(msm)
####
#### 1. Define the environmental response function -----------------------------
####
get_env <- function(sigE, rho, nTime){
varcov <- matrix(c(sigE, rho*sigE, rho*sigE, sigE), 2, 2)
e <- rmvnorm(n = nTime, mean = c(0,0), sigma = varcov)
return(e)
}
####
#### 2. Define the 2 species competition model function ------------------------
####
model <- function(rm1, rm2,
N1.start, N2.start,
K1, K2,
evar1, evar2,
beta12, beta21,
run_time, whitevar, harv){
r1 = numeric(run_time)
r2 = numeric(run_time)
N1 = numeric(run_time)
N2 = numeric(run_time)
Ntot = numeric(run_time)
N1[1] <- N1.start
N2[1] <- N2.start
Ntot[1] <- N1[1] + N2[1]
for(t in 2:run_time){
sum.non1 = (beta12 * N2[t-1])/K2
sum.non2 = (beta21 * N1[t-1])/K1
r1[t] = rm1 * (1-(N1[t-1]/K1) - sum.non1) + evar1 * whitevar[t,1]
r2[t] = rm2 * (1-(N2[t-1]/K2) - sum.non2) + evar2 * whitevar[t,2]
N1[t] = N1[t-1] + N1[t-1]*r1[t]
N2[t] = N2[t-1] + N2[t-1]*r2[t] - N2[t-1]*harv[t]
Ntot[t] = N1[t] + N2[t]
}
pops <- matrix(ncol=5, nrow=run_time)
pops[,1] <- N1
pops[,2] <- N2
pops[,3] <- Ntot
pops[,4] <- r1
pops[,5] <- r2
return(pops)
}
####
#### 3. Run model simulations across range of competition -------------------
####    and species correlations in env response
####
# Set up global variables
rm1 = 0.8 #species 1 intrinsic growth rate
rm2 = 0.8 #species 2 intrinsic growth rate
K1 = 1500 #species 1 carrying capacity
K2 = 1500 #species 2 carrying capacity
evar1 = 0.05 #species 1 environmental variance
evar2 = 0.05 #species 2 environmental variance
N1.start <- K1
N2.start <- K2
# beta12 = 1 #competition coefficient; effect of spp2 on spp1
# beta21 = 1 #competition coefficient; effect of spp1 on spp2
beta12 =  0.5
beta21 = 0.65
rho = 0
run_time = 1500
burn = run_time/2
whitevar <- get_env(sigE = 10, rho = rho, nTime = run_time)
model_null <- model(rm1, rm2,
N1.start, N2.start,
K1, K2,
evar1, evar2,
beta12, beta21,
run_time, whitevar,
harv=rep(0,run_time))
dfout <- as.data.frame(model_null[,1:3])
colnames(dfout) <- c("Spp1","Spp2","Total")
dfout <- dfout %>%
mutate(Time = c(1:nrow(dfout))) %>%
filter(Time > 1300) %>%
gather(Species, Abundance, 1:3) %>%
mutate(Biomass = Abundance/100,
Year = rep(c(1:200),3))
ggplot(dfout, aes(x=Year, y=Biomass, color=Species))+
#geom_line()+
geom_xspline(spline_shape = 1)+
scale_color_manual(values = c("goldenrod2","darkslateblue","black"))+
theme_few()+
guides(color=FALSE)
# par(mfrow=c(1,1))
# matplot(model_null[(run_time-500):run_time,1:2],type="l", lty=1, col=c("goldenrod2","darkslateblue"),
#         xlab="time", ylab="biomass")
# matplot(model_null[(run_time-500):run_time,1:2],pch=19, add=TRUE, col=c("goldenrod2","darkslateblue"))
# # matplot(model_null[(run_time-50):run_time,4:5],type="l", lty=1, col=c("goldenrod2","darkslateblue"),
# #         xlab="time", ylab="per capita growth rate")
# # matplot(model_null[(run_time-50):run_time,4:5],pch=19, add=TRUE, col=c("goldenrod2","darkslateblue"))
#
#
# # print(paste("ABUNDANCE:",as.numeric(community.sync(model_null[burn:run_time,1:2])[1])))
# print(paste("COMM PGR:",as.numeric(community.sync(model_null[burn:run_time,4:5])[1])))
# print(paste("ENV RESP:",as.numeric(community.sync(whitevar[burn:run_time,1:2])[1])))
#
#
#
32*4
1685.12+761.19+461.50
2_4
2-4
test <- 8*5
print(test)
100/3/3
knitr::opts_chunk$set(echo = TRUE)
pvals <- readRDS("./seedling_pvalues.RDS")
head(pvals)
pvals <- readRDS("./seedling_pvalues.RDS") %>%
dplyr::filter(vital_rate=="survival") %>%
dplyr::select(-significant,-vital_rate)
knitr::opts_chunk$set(echo = TRUE)
library(xtable)
library(tidyverse)
library(dplyr)
pvals <- readRDS("./seedling_pvalues.RDS") %>%
dplyr::filter(vital_rate=="survival") %>%
dplyr::select(-significant,-vital_rate)
pvals
source('~/Repos/drivers/empirical/size_by_year_models/plot_sxy_statistics.R')
##------ Tue Dec  5 16:08:40 2017 ------##
##------ Tue Dec  5 16:08:43 2017 ------##
##------ Tue Dec  5 16:08:43 2017 ------##
##------ Tue Dec  5 16:08:43 2017 ------##
small_anoms <- rbind(grow,surv) %>%
dplyr::select(year,state,species,vital,model,smallPred,smallPredUp,smallPredDn) %>%
dplyr::rename(mean_pred = smallPred,
upper_ci  = smallPredUp,
lower_ci  = smallPredDn)
head(small_anoms)
small_anoms <- rbind(grow,surv) %>%
dplyr::select(year,state,species,vital,model,smallPred,smallPredUp,smallPredDn) %>%
dplyr::rename(mean_pred = smallPred,
upper_ci  = smallPredUp,
lower_ci  = smallPredDn) %>%
mutate(plant_size = "Small Plants") %>%
group_by(state,species,vital,model) %>%
summarise(sd_anom = sd(mean_pred)) %>%
spread(model, sd_anom) %>%
ungroup() %>%
mutate(vital = ifelse(vital == "grow", "Growth", "Survival"))
ggplot(small_anoms, aes(x = year_only, y = size_by_year, fill=state))+
geom_abline(aes(intercept = 0, slope = 1), linetype="dashed", lwd=0.25)+
geom_point(color="grey25", shape=21, size=2)+
facet_wrap(~vital, scales = "free")+
xlab("Anomaly from year only model")+
ylab("Anomaly from size*year model")+
scale_fill_brewer(palette = "Set1")+
guides(fill=FALSE)+
theme_few()
################################################################################
##  format_weather_projections: R script to collate, reformat, and summarize
##  CMIP5 weather projections by model, run, and scenario.
##
##  ----------------------------------------------------------------------------
##  Author: Andrew Tredennick (atredenn@gmail.com)
##  Date created: January 2, 2018
################################################################################
##  Clear the workspace
rm(list = ls(all.names = TRUE))
##  Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # only for RStudio
####
####  LOAD LIBRARIES -----------------------------------------------------------
####
library(tidyverse)
library(dplyr)
library(stringr)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv")
View(raw_precip_projs)
####
####  READ IN DATA AND ADD ROW COLUMN INFORMATION ------------------------------
####
col_names <- read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt")
col_names
####
####  READ IN DATA AND ADD ROW COLUMN INFORMATION ------------------------------
####
col_names <- as.character(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))
col_names
read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt")
as.character(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt")[,2])
as.character(as.data.frame(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,2])
as.data.frame(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))
####
####  READ IN DATA AND ADD ROW COLUMN INFORMATION ------------------------------
####
col_names <- as.data.frame(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,2]
####
####  READ IN DATA AND ADD ROW COLUMN INFORMATION ------------------------------
####
col_names <- as.data.frame(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))
as.data.frame(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[1]
as.data.frame(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,1]
####
####  READ IN DATA AND ADD ROW COLUMN INFORMATION ------------------------------
####
col_names <- as.character(as.data.frame(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,1])
col_names <- c("year",
"month",
"day",
as.character(as.data.frame(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,1])
)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv")
head(raw_precip_projs)
tail(col_names)
head(col_names)
col_names <- c("year",
"month",
"day",
as.character(as.data.frame(read.delim("../data/CMIP_YNP/bcca5/Projections5.txt"))[,1])
)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = FALSE)
raw_precip_projs[1,]
raw_precip_projs[1,134:135]
raw_precip_projs[1,1:5]
################################################################################
##  format_weather_projections: R script to collate, reformat, and summarize
##  CMIP5 weather projections by model, run, and scenario.
##
##  ----------------------------------------------------------------------------
##  Author: Andrew Tredennick (atredenn@gmail.com)
##  Date created: January 2, 2018
################################################################################
##  Clear the workspace
rm(list = ls(all.names = TRUE))
##  Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # only for RStudio
####
####  LOAD LIBRARIES -----------------------------------------------------------
####
library(tidyverse)
library(dplyr)
library(stringr)
####
####  READ IN DATA AND ADD ROW COLUMN INFORMATION ------------------------------
####
col_names <- c("year",
"month",
"day",
as.character(as.data.frame(read.delim("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,1])
)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = FALSE)
head(raw_precip_projs)
colnames(raw_precip_projs)
str(raw_precip_projs)
as.character(as.data.frame(read.table("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,1])
read.table("../data/CMIP_YNP/bcca5/COLS_pr.txt")
col_names <- c("year",
"month",
"day",
as.character(as.data.frame(read.table("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,1])
)
################################################################################
##  format_weather_projections: R script to collate, reformat, and summarize
##  CMIP5 weather projections by model, run, and scenario.
##
##  ----------------------------------------------------------------------------
##  Author: Andrew Tredennick (atredenn@gmail.com)
##  Date created: January 2, 2018
################################################################################
##  Clear the workspace
rm(list = ls(all.names = TRUE))
##  Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # only for RStudio
####
####  LOAD LIBRARIES -----------------------------------------------------------
####
library(tidyverse)
library(dplyr)
library(stringr)
####
####  READ IN DATA AND ADD ROW COLUMN INFORMATION ------------------------------
####
col_names <- c("year",
"month",
"day",
as.character(as.data.frame(read.table("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,1])
)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names)
head(raw_precip_projs)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year:day)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -mothn, -day)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day)
head(raw_precip_projs)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "details"))
head(raw_precip_projs)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "details"), sep = "-")
head(raw_precip_projs)
raw_precip_projs[6637,]
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day)
raw_precip_projs[6637,]
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "details"), sep = "[.]")
setwd("~/Repos/sageAbundance/scripts/climate_formatting")
## Script to average and aggregate all CMIP5 model projections
##  Relies on data downloaded from the CMIP5 website:
##  http://cmip-pcmdi.llnl.gov/cmip5/
##  Authors:      Andrew Tredennick and Peter Adler
##  Email:        atredenn@gmail.com
##  Date created: 10-10-2013
### Clean the workspace and set working dir
rm(list=ls())
setwd("../../data/climate/PROJECTIONS/CMIP5/")
####
####  Load necessary libraries -------------------------------------------------
####
library(reshape2)
library(grid)
####
####  Read in and formate precip projections -----------------------------------
####
ppt <- as.data.frame(read.csv("pr.csv", header=FALSE))
head(ppt)
tmp<-as.character(tmp[,1])
colnames(ppt) <- c("Year", "Month",tmp)
tmp<-read.table("COLS_pr.txt")
tmp
tmp<-as.character(tmp[,1])
colnames(ppt) <- c("Year", "Month",tmp)
ppt <- melt(ppt, id.vars=c("Year", "Month"))
ppt[,4] <- as.numeric(ppt[,4]) #NAs coerced for a couple December 2099 null values
tmp<-unlist(strsplit(x=as.character(ppt$variable),split=".",fixed=T))
tmp
tmp<-matrix(tmp,nrow=length(tmp)/3,ncol=3,byrow=T)
tmp
head(tmp)
colnames(tmp)<-c("model","rep","scenario")
ppt<-cbind(ppt,tmp)
head(ppt)
################################################################################
##  format_weather_projections: R script to collate, reformat, and summarize
##  CMIP5 weather projections by model, run, and scenario.
##
##  ----------------------------------------------------------------------------
##  Author: Andrew Tredennick (atredenn@gmail.com)
##  Date created: January 2, 2018
################################################################################
##  Clear the workspace
rm(list = ls(all.names = TRUE))
##  Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # only for RStudio
####
####  LOAD LIBRARIES -----------------------------------------------------------
####
library(tidyverse)
library(dplyr)
library(stringr)
####
####  READ IN DATA AND ADD ROW COLUMN INFORMATION ------------------------------
####
col_names <- c("year",
"month",
"day",
as.character(as.data.frame(read.table("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,1])
)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "details"), sep = "[.]")
head(raw_precip_projs)
################################################################################
##  format_weather_projections: R script to collate, reformat, and summarize
##  CMIP5 weather projections by model, run, and scenario.
##
##  ----------------------------------------------------------------------------
##  Author: Andrew Tredennick (atredenn@gmail.com)
##  Date created: January 2, 2018
################################################################################
##  Clear the workspace
rm(list = ls(all.names = TRUE))
##  Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # only for RStudio
####
####  LOAD LIBRARIES -----------------------------------------------------------
####
library(tidyverse)
library(dplyr)
library(stringr)
####
####  READ IN DATA AND ADD ROW COLUMN INFORMATION ------------------------------
####
col_names <- c("year",
"month",
"day",
as.character(as.data.frame(read.table("../data/CMIP_YNP/bcca5/COLS_pr.txt"))[,1])
)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "rep", "scenario"), sep = "[.]")
head(raw_precip_projs)
raw_precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "rep", "scenario"), sep = "[.]") %>%
group_by(year, month, model_name, scenario) %>%
summarise(total_ppt = sum(ppt))
head(raw_precip_projs)
precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "rep", "scenario"), sep = "[.]") %>%
group_by(year, month, model_name, scenario) %>%
summarise(total_ppt = sum(ppt)) %>%
dplyr::filter(month == 1)
precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "rep", "scenario"), sep = "[.]") %>%
group_by(year, month, model_name, scenario) %>%
summarise(total_ppt = sum(ppt)) %>%
dplyr::filter(month == 1)
names(precip_projs)
precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "rep", "scenario"), sep = "[.]") %>%
group_by(year, month, model_name, scenario) %>%
summarise(total_ppt = sum(ppt)) %>%
dplyr::filter(month == 1) %>%
dplyr::select(model_name, scenario, year, month, total_ppt) %>%
dplyr::arrange(model_name, scenario, year, month)
head(precip_projs)
precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "rep", "scenario"), sep = "[.]") %>%
group_by(year, month, model_name, scenario) %>%
summarise(total_ppt = sum(ppt)) %>%
dplyr::filter(month == 1) %>%
dplyr::select(model_name, scenario, year, month, total_ppt_mm) %>%
dplyr::arrange(model_name, scenario, year, month)
precip_projs <- read_csv("../data/CMIP_YNP/bcca5/pr.csv", col_names = col_names) %>%
gather(key = model, value = ppt, -year, -month, -day) %>%
separate(model, into = c("model_name", "rep", "scenario"), sep = "[.]") %>%
group_by(year, month, model_name, scenario) %>%
summarise(total_ppt_mm = sum(ppt)) %>%
dplyr::filter(month == 1) %>%
dplyr::select(model_name, scenario, year, month, total_ppt_mm) %>%
dplyr::arrange(model_name, scenario, year, month)
source('~/Repos/bison_forecast/code/format_weather_projections.R', echo=TRUE)
