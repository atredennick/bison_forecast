scale_shape_manual(values = c(19,21))+
guides(shape = FALSE)+
ylab("Number of bison")+
xlab("Year")+
theme_few()
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21))+
guides(shape = FALSE)+
ylab("Number of bison")+
xlab("Year")+
theme_few()
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21))+
scale_fill_manual(values = c(NULL,"white"))+
guides(shape = FALSE, fill = FALSE)+
ylab("Number of bison")+
xlab("Year")+
theme_few()
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21))+
scale_fill_manual(values = c("black","white"))+
guides(shape = FALSE, fill = FALSE)+
ylab("Number of bison")+
xlab("Year")+
theme_few()
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, alpha = set), shape = 21, color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_alpha_manual(values = c(1,0.2))+
# scale_shape_manual(values = c(19,21))+
# scale_fill_manual(values = c("black","black"))+
guides(alpha = FALSE)+
ylab("Number of bison")+
xlab("Year")+
theme_few()
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, alpha = set), shape = 21, fill = "black", color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_alpha_manual(values = c(1,0.2))+
# scale_shape_manual(values = c(19,21))+
# scale_fill_manual(values = c("black","black"))+
guides(alpha = FALSE)+
ylab("Number of bison")+
xlab("Year")+
theme_few()
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21))+
scale_fill_manual(values = c("black","grey"))+
guides(shape = FALSE, fill = FALSE)+
ylab("Number of bison")+
xlab("Year")+
theme_few()
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21))+
scale_fill_manual(values = c("black","grey"))+
# guides(shape = FALSE, fill = FALSE)+
ylab("Number of bison")+
xlab("Year")+
theme_few()
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21), name = NULL, labels = c("Training data", "Validation data"))+
scale_fill_manual(values = c("black","grey"), name = NULL, labels = c("Training data", "Validation data"))+
ylab("Number of bison")+
xlab("Year")+
theme_few()+
theme(legend.position = c(0.1,0.8))
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21), name = NULL, labels = c("Training data", "Validation data"))+
scale_fill_manual(values = c("black","grey"), name = NULL, labels = c("Training data", "Validation data"))+
ylab("Number of bison")+
xlab("Year")+
theme_few()+
theme(legend.position = c(0.2,0.8))
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21), name = NULL, labels = c("Training data", "Validation data"))+
scale_fill_manual(values = c("black","grey"), name = NULL, labels = c("Training data", "Validation data"))+
ylab("Number of bison")+
xlab("Year")+
theme_few()+
theme(legend.position = c(0.2,0.85))
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21), name = NULL, labels = c("Training data", "Validation data"))+
scale_fill_manual(values = c("black","grey"), name = NULL, labels = c("Training data", "Validation data"))+
ylab("Number of bison")+
xlab("Year")+
theme_few()+
guides(colour = guide_legend(override.aes = list(size=10)))+
theme(legend.position = c(0.2,0.85))
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21), name = NULL, labels = c("Training data", "Validation data"))+
scale_fill_manual(values = c("black","grey"), name = NULL, labels = c("Training data", "Validation data"))+
ylab("Number of bison")+
xlab("Year")+
theme_few()+
guides(shape = guide_legend(override.aes = list(size=10)))+
theme(legend.position = c(0.2,0.85))
ggplot(prediction_df, aes(x=year))+
geom_ribbon(aes(ymax=upper_prediction, ymin=lower_prediction),
fill=pred_color,
color=NA,
alpha=0.2)+
geom_line(aes(y=median_prediction), color=pred_color, size = 0.2)+
geom_errorbar(aes(ymin=lower_observation, ymax=upper_observation),
width=0.5,
color=obs_color,
size=0.2)+
geom_point(aes(y=observation, shape = set, fill = set), color=obs_color, size=1)+
geom_vline(aes(xintercept=2010), linetype=2,color="grey55")+
geom_col(data = bison_dat, aes(x = year, y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_y_continuous(breaks = seq(0,10000,2000))+
scale_shape_manual(values = c(19,21), name = NULL, labels = c("Training data", "Validation data"))+
scale_fill_manual(values = c("black","grey"), name = NULL, labels = c("Training data", "Validation data"))+
ylab("Number of bison")+
xlab("Year")+
theme_few()+
guides(shape = guide_legend(override.aes = list(size=2, fill = c("black","white"))))+
theme(legend.position = c(0.2,0.85))
################################################################################
##  plot_data.R: R script to plot the time series of YNP bison counts and
##  the West Yellowstone SNOTEL soil water equivalent (annual mean).
##
##  ____________________________________________________________________________
##  Author:       Andrew Tredennick (atredenn@gmail.com)
##  Date created: December 1, 2017
################################################################################
##  Clear everything
rm(list = ls(all.names = TRUE))
##  Set working directory to source file location
root <- "~/Repos/bison_forecast/"
setwd(paste0(root,"code/"))
####
####  LOAD LIBRARIES ----
####
library(tidyverse) # Data science functions
library(dplyr)     # Data wrangling
library(ggthemes)  # Pleasing themes for ggplot2
library(cowplot)   # Combining ggplots
source("./utilities/plotting_theme.R") # Source my plotting theme
####
####  LOAD DATA ----------------------------------------------------------------
####
snow_ynp  <- read.csv("../data/west_yellowstone_snotel_summary.csv", row.names = 1)
weather_dat <- read.csv("../data/PRISM_ppt_tmin_tmean_tmax_tdmean_vpdmin_vpdmax_provisional_4km_197001_201711_44.8090_-110.5728.csv", skip = 10)
bison_raw <- read.csv("../data/YNP_bison_population_size.csv")
##  Reformat weather data from PRISM
weather_dat <- weather_dat %>%
dplyr::select(-tdmean..degrees.F., -vpdmin..hPa., -vpdmax..hPa.) %>%
dplyr::rename(date = Date,
ppt_in = ppt..inches.,
tmin_F = tmin..degrees.F.,
tmean_F = tmean..degrees.F.,
tmax_F = tmax..degrees.F.) %>%
separate(date, into = c("year", "month"), sep = "-")
precip_dat <- weather_dat %>%
dplyr::select(year, month, ppt_in) %>%
filter(month %in% c("01")) %>%
mutate(year = as.integer(year))
##  Reformat bison data and combine with weather data
bison_dat <- bison_raw %>%
dplyr::select(-ends_with("source")) %>%     # drop the source column
mutate(set = ifelse(year < 2011, "training", "validation")) %>% # make new column for data splits
left_join(snow_ynp, by="year") %>% # merge in SNOTEL data
left_join(precip_dat, by="year")
####
####  PLOT BISON AND SNOW DATA -------------------------------------------------
####
plot_data <- bison_dat %>%
dplyr::select(year, set, count.mean, count.sd, wint.removal, ppt_in)
docolor  <- "#278DAF"
altcolor <- "#CF4C26"
docolor  <- "black"
altcolor <- "black"
ggplot(plot_data, aes(x = year, y = count.mean, color = set))+
geom_line(alpha = 0.6)+
geom_point(size=1.5)+
geom_errorbar(aes(ymin = count.mean-count.sd, ymax = count.mean+count.sd), width=0.5, size=0.5)+
geom_col(aes(y = wint.removal), color = "grey55", fill = "grey55", width = 0.3)+
scale_color_manual(values = c(docolor, altcolor))+
scale_y_continuous(breaks = seq(0,6000,1000))+
ylab("Number of bison")+
xlab("Year")+
theme_few()+
guides(color = FALSE)
ggplot(plot_data, aes(x = year, y = ppt_in, color = set))+
geom_line(alpha = 0.6)+
geom_point(size=1.5)+
scale_color_manual(values = c(docolor, altcolor))+
ylab("January Precipitation (in)")+
xlab("Year")+
theme_few()+
guides(color = FALSE)
source('~/Repos/bison_forecast/code/plot_data.R', echo=TRUE)
################################################################################
##  analyze_posteriors.R: R script to plot the posterior distributions of model
##  parameters and to run MCMC diagnostics
##
##  ____________________________________________________________________________
##  Author:       Andrew Tredennick (atredenn@gmail.com)
##  Date created: October 19, 2016
################################################################################
##  Clear everything...
rm(list = ls(all.names = TRUE))
##  Set working directory to source file location
root <- "~/Repos/bison_forecast/"
setwd(paste0(root,"code/"))
####
####  LOAD LIBRARIES ----
####
library(tidyverse) # Data science functions
library(dplyr)     # Data wrangling
library(ggthemes)  # Pleasing themes for ggplot2
library(cowplot)   # Combining ggplots
library(rjags)     # Fitting Bayesian models with JAGS
library(coda)      # MCMC summaries
source("./utilities/plotting_theme.R")
# library(devtools) # For installing packages from GitHub
# install_github("atredennick/ecoforecastR") # get latest version
library(ecoforecastR) # MCMC manipulation (by M. Dietze)
####
####  LOAD FITTED MODELS -------------------------------------------------------
####
swe_est_posts <- as.mcmc.list(list(readRDS("../results/swe_est_posteriors_chain1.RDS"),
readRDS("../results/swe_est_posteriors_chain2.RDS"),
readRDS("../results/swe_est_posteriors_chain3.RDS")))
swe_avg_posts <- as.mcmc.list(list(readRDS("../results/swe_avg_posteriors_chain1.RDS"),
readRDS("../results/swe_avg_posteriors_chain2.RDS"),
readRDS("../results/swe_avg_posteriors_chain3.RDS")))
####
#### PLOT POSTERIOR DISTRIBUTIONS ----------------------------------------------
####
## Redefine priors for plotting
r_mu_prior <- log(1.11) # lambda = 1.11 in Hobbs et al. 2015
r_sd_prior <- sd(log(rnorm(100000,1.11,0.024))) # sd_lambda = 0.024 in Hobbs et al. 2015
## Split output for swe_est model
out          <- list(params=NULL, predict=NULL)
mfit         <- as.matrix(swe_est_posts, chains=TRUE)
pred.cols    <- union(grep("z[",colnames(mfit),fixed=TRUE),grep("mu[",colnames(mfit),fixed=TRUE))
chain.col    <- which(colnames(mfit)=="CHAIN")
out$predict  <- mat2mcmc.list(mfit[,c(chain.col,pred.cols)])
out$params   <- mat2mcmc.list(mfit[,-pred.cols])
fitted_model <- out
post_params <- as.data.frame(as.matrix(fitted_model$params))
max_iters   <- nrow(post_params)
post_params <- post_params %>%
mutate(iteration = 1:max_iters) %>%
dplyr::select(iteration,b,b1,r,sigma_proc) %>%
gather(key = parameter, value = estimate, -iteration) %>%
mutate(prior = c(rnorm(max_iters,0,1000), # b prior
rnorm(max_iters,0,1000), # b1 prior
rnorm(max_iters,r_mu_prior,r_sd_prior), # r prior
runif(max_iters,0,10))) # sd prior
docolor   <- "#278DAF"
prior_col <- "#CF4C26"
docolor   <- "grey"
prior_col <- "black"
post_params$parameter <- as.factor(post_params$parameter)
levels(post_params$parameter) <- c(expression(beta[0]), expression(beta[1]), "r", expression(sigma[p]))
ggplot(post_params, aes(x = estimate, y = ..density..))+
geom_histogram(fill = docolor, color = "white", bins = 30)+
geom_line(data = filter(post_params, parameter == "r"),
aes(x = prior),
stat = "density",
color = "white",
size = 1.2)+
geom_line(data = filter(post_params, parameter == "r"),
aes(x = prior),
stat = "density",
color = prior_col)+
facet_wrap(~parameter, scales = "free", ncol = 4, labeller = label_parsed)+
ylab("Posterior density")+
xlab("Parameter estimate")+
theme_few()
################################################################################
##  analyze_posteriors.R: R script to plot the posterior distributions of model
##  parameters and to run MCMC diagnostics
##
##  ____________________________________________________________________________
##  Author:       Andrew Tredennick (atredenn@gmail.com)
##  Date created: October 19, 2016
################################################################################
##  Clear everything...
rm(list = ls(all.names = TRUE))
##  Set working directory to source file location
root <- "~/Repos/bison_forecast/"
setwd(paste0(root,"code/"))
####
####  LOAD LIBRARIES ----
####
library(tidyverse) # Data science functions
library(dplyr)     # Data wrangling
library(ggthemes)  # Pleasing themes for ggplot2
library(cowplot)   # Combining ggplots
library(rjags)     # Fitting Bayesian models with JAGS
library(coda)      # MCMC summaries
source("./utilities/plotting_theme.R")
# library(devtools) # For installing packages from GitHub
# install_github("atredennick/ecoforecastR") # get latest version
library(ecoforecastR) # MCMC manipulation (by M. Dietze)
####
####  LOAD FITTED MODELS -------------------------------------------------------
####
swe_est_posts <- as.mcmc.list(list(readRDS("../results/ppt_est_posteriors_chain1.RDS"),
readRDS("../results/ppt_est_posteriors_chain2.RDS"),
readRDS("../results/ppt_est_posteriors_chain3.RDS")))
swe_avg_posts <- as.mcmc.list(list(readRDS("../results/ppt_avg_posteriors_chain1.RDS"),
readRDS("../results/ppt_avg_posteriors_chain2.RDS"),
readRDS("../results/ppt_avg_posteriors_chain3.RDS")))
####
#### PLOT POSTERIOR DISTRIBUTIONS ----------------------------------------------
####
## Redefine priors for plotting
r_mu_prior <- log(1.11) # lambda = 1.11 in Hobbs et al. 2015
r_sd_prior <- sd(log(rnorm(100000,1.11,0.024))) # sd_lambda = 0.024 in Hobbs et al. 2015
## Split output for swe_est model
out          <- list(params=NULL, predict=NULL)
mfit         <- as.matrix(swe_est_posts, chains=TRUE)
pred.cols    <- union(grep("z[",colnames(mfit),fixed=TRUE),grep("mu[",colnames(mfit),fixed=TRUE))
chain.col    <- which(colnames(mfit)=="CHAIN")
out$predict  <- mat2mcmc.list(mfit[,c(chain.col,pred.cols)])
out$params   <- mat2mcmc.list(mfit[,-pred.cols])
fitted_model <- out
post_params <- as.data.frame(as.matrix(fitted_model$params))
max_iters   <- nrow(post_params)
post_params <- post_params %>%
mutate(iteration = 1:max_iters) %>%
dplyr::select(iteration,b,b1,r,sigma_proc) %>%
gather(key = parameter, value = estimate, -iteration) %>%
mutate(prior = c(rnorm(max_iters,0,1000), # b prior
rnorm(max_iters,0,1000), # b1 prior
rnorm(max_iters,r_mu_prior,r_sd_prior), # r prior
runif(max_iters,0,10))) # sd prior
docolor   <- "#278DAF"
prior_col <- "#CF4C26"
docolor   <- "grey"
prior_col <- "black"
post_params$parameter <- as.factor(post_params$parameter)
levels(post_params$parameter) <- c(expression(beta[0]), expression(beta[1]), "r", expression(sigma[p]))
ggplot(post_params, aes(x = estimate, y = ..density..))+
geom_histogram(fill = docolor, color = "white", bins = 30)+
geom_line(data = filter(post_params, parameter == "r"),
aes(x = prior),
stat = "density",
color = "white",
size = 1.2)+
geom_line(data = filter(post_params, parameter == "r"),
aes(x = prior),
stat = "density",
color = prior_col)+
facet_wrap(~parameter, scales = "free", ncol = 4, labeller = label_parsed)+
ylab("Posterior density")+
xlab("Parameter estimate")+
theme_few()
source('~/Repos/bison_forecast/code/analyze_posteriors.R', echo=TRUE)
source('~/Repos/bison_forecast/code/analyze_posteriors.R', echo=TRUE)
source('~/Repos/bison_forecast/code/analyze_posteriors.R', echo=TRUE)
source('~/Repos/bison_forecast/code/analyze_posteriors.R', echo=TRUE)
source('~/Repos/bison_forecast/code/analyze_posteriors.R', echo=TRUE)
source('~/Repos/bison_forecast/code/analyze_posteriors.R', echo=TRUE)
source('~/Repos/bison_forecast/code/analyze_posteriors.R', echo=TRUE)
source('~/Repos/bison_forecast/code/partition_forecast.R', echo=TRUE)
