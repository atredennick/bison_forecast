labels = c("IPM", "QBM"))+
scale_color_manual(values=mycols,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.3) +
geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.3)+
scale_fill_manual(values=mycols,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycols,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.4) +
geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.4, position = position_dodge(0.7))+
scale_fill_manual(values=mycols,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycols,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.4) +
geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.2, position = position_dodge(0.7))+
scale_fill_manual(values=mycols,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycols,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.4) +
geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.8, position = position_dodge(0.7))+
scale_fill_manual(values=mycols,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycols,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.4) +
geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.6, position = position_dodge(0.7))+
scale_fill_manual(values=mycols,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycols,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
# stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.4) +
# geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.6, position = position_dodge(0.7))+
scale_fill_manual(values=mycols,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycols,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
source('~/Repos/MicroMesoForecast/figure_table_scripts/accuracy_error_boxplots.R', echo=TRUE)
mycolsemp <- c("white","white")
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.4) +
geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.6, position = position_dodge(0.7))+
scale_fill_manual(values=mycolsemp,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycolsemp,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
guides(color = guide_legend(override.aes = list(color = mycols)))
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
library(tidyverse)
mycols <- c("dodgerblue", "#E78C33")
plot_dat2 <- filter(plot_dat, modelweather %in% c("IPMyes","QBMyes"))
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.4) +
geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.6, position = position_dodge(0.7))+
scale_fill_manual(values=mycols,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycols,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
#make it empty
mycolsemp <- c("white","white")
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.4) +
geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.6, position = position_dodge(0.7))+
scale_fill_manual(values=mycolsemp,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycolsemp,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
guides(color = guide_legend(override.aes = list(color = mycols)))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
mycolsemp <- c("white","white")
ggplot(plot_dat2, aes(x=species, y=rho, fill=model))+
stat_boxplot(geom ='errorbar', aes(color=model), position = position_dodge(0.7), width = 0.4) +
geom_boxplot(outlier.size = 0, color="white", coef = 0, width = 0.6, position = position_dodge(0.7))+
scale_fill_manual(values=mycolsemp,
labels = c("IPM", "QBM"))+
scale_color_manual(values=mycolsemp,
labels = c("IPM", "QBM"))+
ylab(expression(paste("Forecast Accuracy (", rho, ")")))+
xlab("Species")+
scale_y_continuous(limits=c(0,1))+
theme_few()+
guides(color = guide_legend(override.aes = list(color = mycols)),
fill = guide_legend(override.aes = list(fill = mycols)))+
theme(axis.text=element_text(size=14),
axis.title=element_text(size=18))
source('~/Repos/bison_forecast/code/fit_models.R', echo=TRUE)
source('~/Repos/bison_forecast/code/analyze_posteriors.R', echo=TRUE)
unique(post_params$parameter)
docolor <- "#307129" #green to match curren beamer style
ggplot(filter(post_params, parameter = "beta[1]"), aes(x = estimate, y = ..density..))+
geom_histogram(fill = docolor, color = "black", bins = 30)+
ylab("Posterior density")+
xlab("Effect of Jan. Precip.")+
theme_few()
##  Just the climate effect, for presentations
docolor <- "#307129" #green to match curren beamer style
ggplot(filter(post_params, parameter == "beta[1]"), aes(x = estimate, y = ..density..))+
geom_histogram(fill = docolor, color = "black", bins = 30)+
ylab("Posterior density")+
xlab("Effect of Jan. Precip.")+
theme_few()
ggplot(filter(post_params, parameter == "beta[1]"), aes(x = estimate, y = ..density..))+
geom_histogram(fill = docolor, color = "white", bins = 30)+
ylab("Posterior density")+
xlab("Effect of Jan. Precip.")+
theme_few()
##  Just the climate effect, for presentations
docolor <- "#307129" #green to match curren beamer style
ggplot(filter(post_params, parameter == "beta[1]"), aes(x = estimate, y = ..density..))+
geom_histogram(fill = docolor, color = "white", bins = 30)+
geom_vline(aes(xintercept = 0), color = "grey75", linetype = 2)+
ylab("Posterior density")+
xlab("Effect of Jan. Precip.")+
theme_few()
ggplot(filter(post_params, parameter == "beta[1]"), aes(x = estimate, y = ..density..))+
geom_histogram(fill = docolor, color = "white", bins = 30)+
geom_vline(aes(xintercept = 0), color = "grey50", linetype = 2)+
ylab("Posterior density")+
xlab("Effect of Jan. Precip.")+
theme_few()
ggplot(filter(post_params, parameter == "beta[1]"), aes(x = estimate, y = ..density..))+
geom_histogram(fill = docolor, color = "white", bins = 30)+
geom_vline(aes(xintercept = 0), color = "grey35", linetype = 2)+
ylab("Posterior density")+
xlab("Effect of Jan. Precip.")+
theme_few()
source('~/Repos/bison_forecast/code/partition_forecast.R', echo=TRUE)
ggplot(data=var_rel_preds, aes(x=x))+
geom_ribbon(aes(ymin=0, ymax=varIPDE), fill=my_cols[4])+
geom_ribbon(aes(ymin=0, ymax=varIPD), fill=my_cols[3])+
geom_ribbon(aes(ymin=0, ymax=varIP), fill=my_cols[2])+
geom_ribbon(aes(ymin=0, ymax=varI), fill=my_cols[1])+
ylab("Percent of uncertainty")+
xlab("Forecast steps")+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"))+
theme_few()
my_cols <- c("#0A4D5B", "#139AB8", "#39B181","grey")
ggplot(data=var_rel_preds, aes(x=x))+
geom_ribbon(aes(ymin=0, ymax=varIPDE), fill=my_cols[4])+
geom_ribbon(aes(ymin=0, ymax=varIPD), fill=my_cols[3])+
geom_ribbon(aes(ymin=0, ymax=varIP), fill=my_cols[2])+
geom_ribbon(aes(ymin=0, ymax=varI), fill=my_cols[1])+
ylab("Percent of uncertainty")+
xlab("Forecast steps")+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"))+
theme_few()
head(var_rel_preds)
var2 <- var_rel_preds %>%
gather(simtype, variance, -x)
var2
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance))
tmpvar <- var_rel_preds
tmpvar
##  For presentations
my_cols <- c("#0A4D5B", "#139AB8", "#39B181","grey")
tmpvar <- var_rel_preds
colnames(tmpvar) <- c("AvarIPDE", "BvarIPD", "CvarIP", "DvarI", "x")
var2 <- tmpvar %>%
gather(simtype, variance, -x)
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance))
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of uncertainty")+
xlab("Forecast steps")+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"))+
theme_few()+
theme(legend.position = "bottom")
my_cols <- c("#EB6C26", "#D5DD7F", "#408CAD","grey")
tmpvar <- var_rel_preds
colnames(tmpvar) <- c("AvarIPDE", "BvarIPD", "CvarIP", "DvarI", "x")
var2 <- tmpvar %>%
gather(simtype, variance, -x)
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of uncertainty")+
xlab("Forecast steps")+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of uncertainty")+
xlab("Forecast steps")+
scale_fill_manual(values = mycols, name = NULL)+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of uncertainty")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL)+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of uncertainty")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"),
expand = c(0, 0)))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0)))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(1,forecast_steps,by=1), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(1,forecast_steps,by=1),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percent of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
guides(fill=guide_legend(ncol=2))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
guides(fill=guide_legend(ncol=2))+
theme_few()+
theme(legend.position = "bottom",
legend.key = element_rect(size = 5),
legend.key.size = unit(1.5, 'lines'))
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
guides(fill=guide_legend(nrow=2))+
theme_few()+
theme(legend.position = "bottom",
legend.key = element_rect(size = 5),
legend.key.size = unit(1.5, 'lines'))
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
guides(fill=guide_legend(nrow=2))+
theme_few()+
theme(legend.position = "bottom",
legend.key = element_rect(size = 5),
legend.key.size = unit(1.5, 'lines'))
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
guides(fill=guide_legend(nrow=2))+
theme_few()+
theme(legend.position = "bottom",
legend.key = element_rect(size = 2),
legend.key.size = unit(1.5, 'lines'))
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
guides(fill=guide_legend(nrow=2))+
theme_few()+
theme(legend.position = "bottom",
legend.key = element_rect(size = 1),
legend.key.size = unit(1.5, 'lines'))
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
guides(fill = guide_legend(ncol = 2,keywidth=4))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
guides(fill = guide_legend(ncol = 1,keywidth=4))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
guides(fill = guide_legend(ncol = 4,keywidth=4))+
theme_few()+
theme(legend.position = "bottom")
ggplot(var2, aes(x=x, fill = simtype))+
geom_ribbon(aes(ymin=0, ymax=variance), color = "black")+
ylab("Percentage of total variance (%)")+
xlab("Forecast steps")+
scale_fill_manual(values = my_cols, name = NULL,
labels = c("Process error", "Driver uncertainty", "Parameter uncertainty", "Initial conditions"))+
scale_x_continuous(breaks=seq(2,forecast_steps,by=2),
labels=paste(seq(2,forecast_steps,by=2), "yrs"),
expand = c(0, 0))+
scale_y_continuous(labels=paste0(seq(0,100,25),"%"),
expand = c(0, 0))+
theme_few()
